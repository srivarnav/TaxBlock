{"version":3,"sources":["components/UI/Header/Header.js","components/UI/Footer/Bottom.js","components/UI/Footer/Footer.js","components/Restaurent/RestaurentCard/CardSubContent/CardSubContent.js","components/Restaurent/RestaurentCard/RestaurentCard.js","components/UI/Search/SearchBar.js","components/UI/Categories/Categories.js","components/UI/Nearby/Nearby.js","containers/Order.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","fontWeight","ButtonAppBar","classes","className","AppBar","position","style","backgroundColor","boxShadow","Toolbar","Grid","container","item","xs","Typography","variant","width","SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","appBar","top","bottom","paper","padding","margin","maxWidth","image","height","img","display","maxHeight","ComplexGrid","props","data","Paper","elevation","alt","src","sm","direction","gutterBottom","textTransform","name","Rating","defaultValue","rating","size","cursor","reviewsCount","align","whiteSpace","marginBottom","tags","ImgMediaCard","console","log","map","el","Card","key","CardActionArea","CardMedia","component","CardContent","CardActions","element","Button","disabled","InputWithIcon","TextField","id","placeholder","InputProps","startAdornment","InputAdornment","flexWrap","justifyContent","overflow","palette","background","gridList","transform","overflowY","primary","light","titleBar","SingleLineGridList","GridList","cols","tile","GridListTile","restaurants","popular","nearbyCount","float","Nearby","Order","categories","recipes","createMuiTheme","Fragment","marginTop","Container","paddingTop","paddingBottom","length","justify","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1706c45c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport {categories} from \"../../../data/recipe.json\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color:'#383838',\n    fontWeight: 'bold'\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" style={{backgroundColor:'#ffffff', boxShadow:'none'}}>\n        <Toolbar>\n          <Grid container spacing={1}>\n            <Grid item xs={10}>\n              <Typography variant=\"h4\" className={classes.title}>\n                What would <br/>you like to eat?\n              </Typography>\n            </Grid>\n          </Grid>\n          <NotificationsNoneOutlinedIcon style={{color:\"#000000\"}}/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Cart\" icon={<ShoppingCartIcon />} />\n      <BottomNavigationAction label=\"Explore\" icon={<ExploreIcon />} />\n      <BottomNavigationAction label=\"Settings\" icon={<SettingsIcon />} />\n    </BottomNavigation>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Bottom from './Bottom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    backgroundColor: '#ffffff'\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Bottom/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function ComplexGrid(props) {\n  const classes = useStyles();\n  const {data} = props;\n  return (\n    <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={3}>\n            <Paper elevation={1}>\n              <img className={classes.img} alt=\"complex\" src={data.icon} />\n            </Paper>\n            {/* </ButtonBase> */}\n          </Grid>\n          <Grid item xs={7} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"h5\" style={{textTransform:\"capitalize\", fontWeight:\"bold\"}}>\n                  {data.name}\n                </Typography>\n                <Rating name=\"size-small\" defaultValue={data.rating} size=\"small\" style={{color: '#4884EE'}} />\n                <Typography variant=\"caption\" style={{ cursor: 'pointer' }}>\n                  ({(`${data.reviewsCount} reviews`)})\n                </Typography>\n              </Grid> \n            </Grid>\n          </Grid>\n          <Grid item xs={2}>\n            <Typography variant=\"subtitle1\" align=\"right\" style={{color:'#4884EE'}}>$19.00</Typography>\n            <Typography variant=\"caption\" style={{whiteSpace:\"nowrap\"}}>Min order</Typography>\n          </Grid>\n        </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport CardSubContent from \"./CardSubContent/CardSubContent\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom:'20px'\n  },\n  tags:{\n    whiteSpace:\"nowrap\", \n    color:'#383838'\n  }\n});\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  console.log(props);\n  const {data} = props;\n\n  return (\n    (data)?data.map((el=>{\n      return (\n        <Card className={classes.root} key={el.name}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              height=\"140\"\n              image={el.image}\n              title=\"Contemplative Reptile\"\n            />\n          </CardActionArea>\n          <CardContent>\n            <CardSubContent data={el}/>\n            </CardContent >\n          <CardActions>\n            {\n              (data)?el.tags.map((element)=>{\n                return (\n                  <Button size=\"small\" variant=\"contained\" disabled className={classes.tags} style={{color:'#383838'}}>\n                    {element}\n                  </Button>)\n              }):\"\"\n            }\n          </CardActions>\n        </Card>\n      )\n    })):\"\"\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    width:'95%'\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        placeholder=\"Search Restaurent\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    height:'100px',\n    overflowY: 'hidden'\n    \n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: 'auto',\n    maxWidth: 600,\n    // width:'100%'\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function SingleLineGridList(props) {\n  const classes = useStyles();\n  const {data} = props;\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2}>\n        {data.map((tile) => (\n          <GridListTile key={\"a\"} style={{padding:'7px'}}>\n            <Paper className={classes.paper} elevation={2}>\n              <Grid container spacing={1}>\n                <Grid item xs={5}>\n                  <img className={classes.img} alt=\"complex\" src={tile.image} />\n                </Grid>\n                <Grid item xs={7} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography variant=\"body2\" gutterBottom style={{textTransform:\"capitalize\", fontWeight:\"bold\"}}>\n                        {tile.name}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"textSecondary\" style={{whiteSpace:\"nowrap\"}}>\n                        {`${tile.restaurants} restaurants`}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n  },\n  popular:{\n    fontWeight:'bold'\n  },\n  nearbyCount:{\n    float:'right',\n    color: '#4884EE'\n  }\n});\n\nexport default function Nearby(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4} >\n        <Grid item xs={8}>\n          <Typography variant=\"h6\" gutterBottom className={classes.popular} >\n            Popular Restaurent\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"subtitle2\" gutterBottom className={classes.nearbyCount}>\n            {props.data} nearby\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"../components/UI/Header/Header\";\nimport Footer from \"../components/UI/Footer/Footer\";\nimport RestaurentCard from \"../components/Restaurent/RestaurentCard/RestaurentCard\";\nimport SearchBar from \"../components/UI/Search/SearchBar\";\nimport Category from \"../components/UI/Categories/Categories\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Nearby from \"../components/UI/Nearby/Nearby\";\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport data from \"../data/recipe.json\"\n\nclass Order extends React.Component {\n  render() {\n    console.log(data)\n    const {categories, recipes} = data;\n    const theme = createMuiTheme();\n    \n    return (\n      <React.Fragment>\n      {/* <CssBaseline /> */}\n      <Header/>\n      <main>\n        {/* section 1 */}\n        <div className={\"classes.heroContent\"} style={{marginTop:'123px'}}>\n          <Category data={categories}/>\n          <SearchBar />\n        </div>\n        <Container className={\"classes.cardGrid\"} maxWidth=\"md\" style={{paddingTop: theme.spacing(4), paddingBottom: theme.spacing(8),}}>\n          {/* End Section 1 */}\n          <Nearby data={recipes.length}/>\n          <Grid container spacing={4} justify=\"center\">\n            <RestaurentCard data={recipes}/>\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer : Bottom Navigation */}\n      <footer className={\"classes.footer\"}>\n        <Footer />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport Order from \"./containers/Order\";\nfunction App() {\n  return (\n    <div>\n      <Order/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}